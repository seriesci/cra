version: 2
jobs:
  build:
    docker:
      - image: circleci/node:12.13-buster-browsers

    steps:
      - checkout

      - run: npm ci

      - run:
          name: use cib
          command: |
            curl -L https://github.com/seriesci/cib/releases/download/v0.0.3/cib_0.0.3_Linux_x86_64.tar.gz | tar -xz
            ./cib

      # - run:
      #     name: post lighthouse metrics to seriesci
      #     command: |
      #       npm run build
      #       cd build
      #       python3 -m http.server 5555 &
      #       npx lighthouse http://localhost:5555 --output json --output-path=./lighthouse.json --chrome-flags="--headless"
      #       node -p "require('./lighthouse.json').categories.performance.score * 100 + '%'" | xargs -I {} curl \
      #         --header "Authorization: Token ${TOKEN}" \
      #         --data-urlencode value="{}" \
      #         --data sha="${CIRCLE_SHA1}" \
      #         https://seriesci.com/api/repos/seriesci/cra/performance/combined
      #       node -p "require('./lighthouse.json').categories.accessibility.score * 100 + '%'" | xargs -I {} curl \
      #         --header "Authorization: Token ${TOKEN}" \
      #         --data-urlencode value="{}" \
      #         --data sha="${CIRCLE_SHA1}" \
      #         https://seriesci.com/api/repos/seriesci/cra/accessibility/combined
      #       node -p "require('./lighthouse.json').categories['best-practices'].score * 100 + '%'" | xargs -I {} curl \
      #         --header "Authorization: Token ${TOKEN}" \
      #         --data-urlencode value="{}" \
      #         --data sha="${CIRCLE_SHA1}" \
      #         https://seriesci.com/api/repos/seriesci/cra/practices/combined
      #       node -p "require('./lighthouse.json').categories.seo.score * 100 + '%'" | xargs -I {} curl \
      #         --header "Authorization: Token ${TOKEN}" \
      #         --data-urlencode value="{}" \
      #         --data sha="${CIRCLE_SHA1}" \
      #         https://seriesci.com/api/repos/seriesci/cra/seo/combined

      # - run:
      #     name: post code coverage to seriesci
      #     command: |
      #       npm test -- --coverage | grep Statements | awk '{print $3}' | xargs -I {} curl \
      #         --header "Authorization: Token ${TOKEN}" \
      #         --data-urlencode value="{}" \
      #         --data sha="${CIRCLE_SHA1}" \
      #         https://seriesci.com/api/repos/seriesci/cra/coverage/combined

      # - run:
      #     name: post bundle size to seriesci
      #     command: |
      #       npm run build
      #       du -sh build/ | awk '{print $1}' | xargs -I {} curl \
      #         --header "Authorization: Token ${TOKEN}" \
      #         --data-urlencode value="{}" \
      #         --data sha="${CIRCLE_SHA1}" \
      #         https://seriesci.com/api/repos/seriesci/cra/bundlesize/combined

      # - run:
      #     name: post build time to seriesci
      #     command: |
      #         sudo apt-get update
      #         sudo apt-get install bc
      #         start=$(date +%s.%N)
      #         npm run build
      #         duration=$(echo "$(date +%s.%N) - $start" | bc)
      #         echo "$duration s" | xargs -I {} curl \
      #         --header "Authorization: Token ${TOKEN}" \
      #         --data-urlencode value="{}" \
      #         --data sha="${CIRCLE_SHA1}" \
      #         https://seriesci.com/api/repos/seriesci/cra/time/combined

      # - run:
      #     name: post number of dependencies to seriesci
      #     command: |
      #         (npm ls --depth=0 --prod --parseable --silent || true) | grep node_modules | wc -l | xargs -I {} curl \
      #         --header "Authorization: Token ${TOKEN}" \
      #         --data-urlencode value="{}" \
      #         --data sha="${CIRCLE_SHA1}" \
      #         https://seriesci.com/api/repos/seriesci/cra/dependencies/combined
